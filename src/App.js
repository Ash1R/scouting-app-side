import React from "react";
import { Routes, Route } from "react-router-dom";
import {
  getFirestore,
  setDoc,
  doc,
  getDocs,
  collection,
  query,
  where,
} from "firebase/firestore";
import Home from "./Home";
import MatchScout from "./MatchScout";
import MatchScoutSubjective from "./MatchScoutSubjective";
import PitScout from "./PitScout";
import NewTeamPages from "./NewTeamPage";
import PitDisplay from "./PitDisplay";
import DataDisplay from "./DataDisplay";
import ScanMatchScoutDataQR from "./ScanMatchScoutDataQR";
import ScanPitScoutDataQR from "./ScanPitScoutDataQR";
import RawMatchTable from "./RawMatchTable";
import TeamLookup from "./TeamLookup";
import TeamList from "./TeamList";
import MatchList from "./ListMatch";

// Testing
import CanvasDisplay from "./CanvasDisplay";

import CanvasChooser from "./CanvasChooser";

//setting up main page
//The element= causes all the content of the pages to show
const App = () => {
  var initials = new Object();
  initials = {
    jc: "Julio",
    jd: "Joshua D",
    lf: "Leah",
    af: "Anthony",
    lg: "Leison",
    emh: "Emi",
    jj: "Jake",
    mk: "Michael K",
    tl: "Teo(dor)",
    cm: "Cole M",
    jm: "Joushua M",
    fr: "Faris",
    ms: "Max",
    os: "Om",
    as: "Angela",
    rt: "Richie",
    rv: "Robert(o)",
    az: "Allan",
    tz: "Tony",
    tb: "Theadin",
    tc: "Tyrus",
    yd: "Yichen",
    jud: "Julia",
    ad: "Andrea",
    ee: "Eliot",
    ch: "Cole H",
    ep: "Elisa",
    ar: "Ashir",
    ns: "Nicole",
    gt: "Gavin",
    aw: "Ani",
    sa: "Sahil",
    la: "Laksh(ya)",
    mc: "Michael C",
    ld: "Leo",
    ke: "Kyle",
    pg: "Paola",
    elh: "Ellery",
    eh: "Edwin",
    ih: "Ian",
    hh: "Ian",
    hl: "Henry",
    cn: "Cameron",
    ap: "Arnav",
    cs: "Cici",
    rs: "Cici",
    ay: "Adam",
    ac: "Alex",
    joj: "Johann",
    sp: "Saara",
    mes: "Mehaan",
    kt: "Kaushik",
  };

  var assignments = new Object();

  assignments = {
    cm: [
      [1, 4481],
      [10, 3128],
      [11, 1678],
      [12, 294],
      [13, 1661],
      [14, 3328],
      [15, 4731],
      [16, 1678],
      [17, 972],
      [18, 6479],
      [19, 1266],
      [2, 5089],
      [20, 2102],
      [21, 973],
      [22, 2543],
      [23, 4711],
      [24, 3473],
      [25, 4414],
      [26, 3328],
      [27, 3647],
      [28, 1661],
      [29, 2584],
      [3, 3008],
      [30, 3008],
      [31, 4201],
      [32, 3859],
      [33, 7424],
      [34, 687],
      [35, 973],
      [36, 5012],
      [37, 498],
      [38, 4201],
      [39, 2465],
      [4, 3328],
      [40, 3881],
      [41, 2486],
      [42, 498],
      [43, 3328],
      [44, 5089],
      [45, 6036],
      [46, 2486],
      [47, 8891],
      [5, 589],
      [6, 6658],
      [60, 4201],
      [61, 4481],
      [62, 691],
      [63, 4],
    ],
    aw: [
      [1, 1159],
      [10, 5012],
      [11, 589],
      [12, 7424],
      [13, 4201],
      [14, 1572],
      [15, 2584],
      [16, 4],
      [17, 589],
      [18, 498],
      [19, 5089],
      [2, 3859],
      [20, 4201],
      [21, 3328],
      [22, 3881],
      [23, 3863],
      [24, 1572],
      [25, 2486],
      [26, 6036],
      [27, 1452],
      [28, 7424],
      [29, 696],
      [3, 6036],
      [30, 1515],
      [31, 691],
      [32, 4414],
      [33, 3354],
      [34, 1678],
      [35, 3647],
      [36, 1661],
      [37, 1515],
      [38, 2543],
      [39, 2429],
      [4, 2486],
      [40, 3859],
      [48, 687],
      [49, 6479],
      [5, 4711],
      [50, 4],
      [51, 696],
      [52, 2465],
      [53, 589],
      [54, 1452],
      [55, 2543],
      [56, 2429],
      [57, 294],
      [58, 3255],
      [59, 696],
      [6, 687],
      [60, 1159],
      [61, 6479],
      [62, 973],
      [63, 3647],
    ],
    ay: [
      [1, 3128],
      [10, 4711],
      [11, 2543],
      [12, 6658],
      [13, 2429],
      [14, 3255],
      [15, 4414],
      [16, 3008],
      [17, 3473],
      [18, 3863],
      [19, 1572],
      [2, 972],
      [20, 2486],
      [21, 696],
      [22, 7424],
      [23, 1678],
      [24, 8891],
      [25, 6479],
      [26, 4201],
      [27, 4481],
      [28, 3128],
      [29, 2102],
      [3, 1266],
      [30, 6658],
      [31, 3473],
      [32, 6036],
      [4, 691],
      [41, 5012],
      [42, 3354],
      [43, 3128],
      [44, 294],
      [45, 3881],
      [46, 3863],
      [47, 4414],
      [48, 4481],
      [49, 4731],
      [5, 3354],
      [50, 5089],
      [51, 4711],
      [52, 5012],
      [53, 6036],
      [54, 687],
      [55, 973],
      [56, 5089],
      [57, 1515],
      [58, 3473],
      [59, 1266],
      [6, 2584],
      [60, 498],
      [61, 6658],
      [62, 4731],
      [63, 294],
    ],
    ee: [
      [1, 8891],
      [10, 6036],
      [11, 1266],
      [12, 498],
      [13, 5089],
      [14, 3354],
      [15, 2486],
      [16, 8891],
      [17, 1159],
      [18, 2429],
      [19, 3255],
      [2, 5012],
      [20, 3128],
      [21, 1515],
      [22, 2584],
      [23, 6658],
      [3, 7424],
      [33, 2486],
      [34, 2465],
      [35, 3881],
      [36, 4],
      [37, 8891],
      [38, 4414],
      [39, 4481],
      [4, 4414],
      [40, 1159],
      [41, 1572],
      [42, 2584],
      [43, 687],
      [44, 973],
      [45, 972],
      [46, 2543],
      [47, 3354],
      [48, 2102],
      [49, 2429],
      [5, 2102],
      [50, 1515],
      [51, 3473],
      [52, 294],
      [53, 1159],
      [54, 3863],
      [55, 498],
      [56, 2584],
      [57, 1572],
      [58, 3128],
      [59, 589],
      [6, 1572],
      [60, 3008],
      [61, 2584],
      [62, 2429],
      [63, 7424],
    ],
    pg: [
      [1, 2543],
      [10, 6479],
      [11, 3473],
      [12, 1452],
      [13, 2102],
      [14, 3881],
      [15, 973],
      [16, 5012],
      [2, 3863],
      [24, 2429],
      [25, 4731],
      [26, 294],
      [27, 3859],
      [28, 3354],
      [29, 687],
      [3, 2465],
      [30, 3881],
      [31, 8891],
      [32, 2543],
      [33, 3863],
      [34, 1159],
      [35, 1266],
      [36, 1452],
      [37, 3128],
      [38, 3863],
      [39, 691],
      [4, 1678],
      [40, 6479],
      [41, 3473],
      [42, 1515],
      [43, 4711],
      [44, 4],
      [45, 589],
      [46, 5012],
      [47, 2465],
      [48, 3008],
      [49, 1678],
      [5, 294],
      [50, 973],
      [51, 3859],
      [52, 3128],
      [53, 2486],
      [54, 691],
      [55, 972],
      [56, 3354],
      [57, 2102],
      [58, 3647],
      [59, 4711],
      [6, 1452],
      [60, 3881],
      [61, 2543],
      [62, 2102],
      [63, 1572],
    ],
    ac: [
      [1, 4],
      [17, 6658],
      [18, 687],
      [19, 4481],
      [2, 1515],
      [20, 3354],
      [21, 691],
      [22, 2465],
      [23, 589],
      [24, 972],
      [25, 3255],
      [26, 691],
      [27, 2543],
      [28, 1159],
      [29, 498],
      [3, 6479],
      [30, 3255],
      [31, 294],
      [32, 1572],
      [33, 4481],
      [34, 696],
      [35, 4711],
      [36, 3328],
      [37, 2584],
      [38, 589],
      [39, 972],
      [4, 3647],
      [40, 2102],
      [41, 1661],
      [42, 1266],
      [43, 4731],
      [44, 696],
      [45, 3647],
      [46, 3255],
      [47, 6658],
      [48, 3328],
      [49, 7424],
      [5, 3473],
      [50, 1266],
      [51, 2584],
      [52, 6658],
      [53, 3008],
      [54, 8891],
      [55, 6479],
      [56, 4],
      [57, 1678],
      [58, 3859],
      [59, 1661],
      [6, 4201],
      [60, 5012],
      [61, 3328],
      [62, 3354],
      [63, 687],
    ],
    ch: [
      [10, 691],
      [11, 687],
      [12, 3859],
      [13, 2465],
      [14, 696],
      [15, 6036],
      [16, 3647],
      [17, 1452],
      [18, 4711],
      [19, 294],
      [20, 4731],
      [21, 3859],
      [22, 1661],
      [23, 4],
      [24, 3008],
      [25, 5089],
      [26, 1266],
      [27, 2465],
      [28, 973],
      [29, 5012],
      [30, 589],
      [31, 6479],
      [32, 2429],
      [33, 972],
      [34, 5089],
      [35, 2102],
      [36, 4731],
      [37, 6036],
      [38, 7424],
      [39, 3255],
      [40, 3647],
      [41, 6658],
      [42, 1678],
      [43, 3008],
      [44, 1452],
      [45, 691],
      [46, 1159],
      [47, 498],
      [48, 1661],
      [49, 1452],
      [50, 4201],
      [51, 1572],
      [52, 4414],
      [53, 4481],
      [54, 3881],
      [55, 4201],
      [56, 3328],
      [57, 4731],
      [58, 7424],
      [59, 8891],
    ],
  };

  var done = false;
  var scoutMatch = 0;
  var scoutTeam = 0;
  var subjective = true;

  for (const prop in assignments) {
    let lst = assignments[prop];
    const db = getFirestore();

    for (let i = 0; i < lst.length; i++) {
      subjective = true;
      scoutMatch = lst[i][0];
      scoutTeam = lst[i][1];
      var name = prop;
      console.log({ done, scoutMatch, scoutTeam, subjective, name });
      const docRef = doc(
        db,
        "test-a",
        String(lst[i][1]) + "_" + String(lst[i][0]) + "_" + name.toLowerCase()
      );
      setDoc(
        docRef,
        { done, scoutMatch, scoutTeam, subjective, name },
        { merge: true }
      );
    }
  }
  return (
    <Routes>
      <Route path="/" element={<Home />} />
      <Route path="matchscout" element={<MatchScout />} />
      <Route path="matchscoutsubjective" element={<MatchScoutSubjective />} />
      <Route path="pitscout" element={<PitScout />} />
      <Route path="/teampages/" element={<NewTeamPages />} />
      <Route path="rawmatchtable" element={<RawMatchTable />} />
      <Route path="/teamlist" element={<TeamList />} />
      <Route path="/teamlookup/" element={<TeamLookup />} />

      <Route path="/rawmatch" element={<RawMatchTable />} />

      <Route path="datadisplay" element={<DataDisplay />} />
      <Route path="scanmatchscoutdata" element={<ScanMatchScoutDataQR />} />
      <Route path="scanpitscoutdata" element={<ScanPitScoutDataQR />} />
      <Route path="/matchlist" element={<MatchList />} />
    </Routes>
  );
};

export default App;
